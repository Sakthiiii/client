{"version":3,"sources":["redux/constants/index.js","redux/reducers/userReducer.js","redux/reducers/emailReducer.js","redux/store.js","api/index.js","redux/actions/clearErrors.js","components/AuthPage/Form/FormLogin.js","redux/actions/accountActions.js","components/AuthPage/Form/FormRegister.js","components/AuthPage/images/gmail.svg","components/AuthPage/AuthPage.js","redux/actions/emailActions.js","components/EmailPage/Header/AccountControls/AccountControls.js","components/EmailPage/Header/EditImageModal/EditImageModal.js","components/EmailPage/Header/images/gmail-logo.png","components/EmailPage/Header/Header.js","components/EmailPage/Sidebar/SidebarOption/SidebarOption.js","components/EmailPage/Sidebar/Sidebar.js","components/EmailPage/EmailOptions/EmailOptions.js","components/EmailPage/EmailCategory/EmailListItem/EmailListItem.js","components/EmailPage/EmailCategory/EmailCategory.js","components/EmailPage/EmailView/EmailView.js","components/EmailPage/ComposeMail/ComposeMail.js","components/EmailPage/EmailPage.js","App.js","index.js","components/EmailPage/EmailCategory/styles/EmailCategory.module.css","components/EmailPage/ComposeMail/styles/ComposeMail.module.css","components/EmailPage/Header/styles/Header.module.css","components/EmailPage/Sidebar/styles/Sidebar.module.css","components/EmailPage/EmailCategory/EmailListItem/styles/EmailListItem.module.css","components/AuthPage/Form/styles/Form.module.css","components/AuthPage/styles/AuthPage.module.css","components/EmailPage/Header/EditImageModal/styles/EditImageModal.module.css","components/EmailPage/EmailOptions/styles/EmailOptions.module.css","components/EmailPage/EmailView/styles/EmailView.module.css","components/EmailPage/styles/EmailPage.module.css","components/EmailPage/Header/AccountControls/styles/AccountControls.module.css","components/EmailPage/Sidebar/SidebarOption/styles/SidebarOption.module.css"],"names":["CLEAR_ERRORS","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_ERROR","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_ERROR","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_ERROR","FETCH_EMAILS_REQUEST","FETCH_EMAILS_SUCCESS","FETCH_EMAILS_ERROR","SEND_EMAIL_REQUEST","SEND_EMAIL_SUCCESS","SEND_EMAIL_ERROR","SAVE_DRAFT_REQUEST","SAVE_DRAFT_SUCCESS","SAVE_DRAFT_ERROR","UPDATE_DRAFT_REQUEST","UPDATE_DRAFT_SUCCESS","UPDATE_DRAFT_ERROR","EMAIL_TRASH_REQUEST","EMAIL_TRASH_SUCCESS","EMAIL_TRASH_ERROR","EMAIL_UNTRASH_REQUEST","EMAIL_UNTRASH_SUCCESS","EMAIL_UNTRASH_ERROR","TOGGLE_EMAIL_PROP_REQUEST","TOGGLE_EMAIL_PROP_SUCCESS","TOGGLE_EMAIL_PROP_ERROR","DELETE_EMAIL_REQUEST","DELETE_EMAIL_SUCCESS","DELETE_EMAIL_ERROR","initialState","isLoading","isLoggedIn","token","window","localStorage","getItem","user","error","mailbox","inbox","outbox","drafts","trash","allReducers","combineReducers","userReducer","state","action","type","setItem","console","log","email","payload","profilePicture","emailReducer","copyOfDrafts","i","length","_id","copyOfInbox","copyOfOutbox","isEmailFound","copyOfTrash","copyOfDrafts2","isEmailFound2","splice","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","url","headers","Authorization","register","form","axios","post","login","uploadImage","image","put","sendEmail","saveDraft","updateDraft","id","moveToTrash","removeFromTrash","markAsRead","markAsUnread","setFavorite","unsetFavorite","deleteEmail","delete","clearErrors","FormLogin","dispatch","useDispatch","useForm","defaultValues","handleSubmit","errors","formState","alert","setTimeout","CircularProgress","color","onSubmit","values","a","response","data","message","className","styles","name","placeholder","ref","required","pattern","minLength","password","Button","disabled","isSubmitting","FormRegister","watch","useRef","current","firstName","middleName","lastName","validate","value","passwordConfirm","AuthPage","useSelector","useState","isCreateNew","setIsCreateNew","toggleIsCreateNew","useEffect","page","src","GmailIcon","alt","link","onClick","getEmailsAction","getState","get","sendEmailAction","sent","received","updateDraftAction","draft","AccountControls","toggleShowEditImage","toggleShowProfile","container","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","style","cursor","Avatar","avatar","first","last","EditImageModal","setImage","modal","e","preventDefault","uploadImageAction","base64","multiple","onDone","file","Header","toggleShowSidebar","showProfile","setShowProfile","showEditImage","setShowEditImage","side","IconButton","GmailLogo","middle","relative","SidebarOption","Icon","title","number","selected","item","active","fontSize","Sidebar","toggleIsCompose","inboxLength","sentLength","starredLength","draftsLength","trashLength","history","useHistory","location","useLocation","showMore","setShowMore","compose","startIcon","InboxRoundedIcon","push","pathname","StarRoundedIcon","NoteRoundedIcon","SendRoundedIcon","ExpandMoreRoundedIcon","showMore__on","showMore__off","DeleteRoundedIcon","EmailOptions","props","component","wrapper","children","Tooltip","SelectOne","Checkbox","SelectAll","GoBack","goBack","Refetch","MarkUnread","markAsUnreadAction","MarkStar","isStarred","unsetFavoriteAction","setFavoriteAction","PlaceTrash","isInTrash","removeFromTrashAction","moveToTrashAction","Delete","deleteEmailAction","More","EmailCategoryItem","subject","date","isRead","isTrash","isDraft","category","useParams","read","unread","undefined","dateObj","day","Date","getDate","getMonth","dateToString","EmailCategory","starred","userEmail","center","map","from","createdAt","favorite","to","updatedAt","EmailView","find","emailToDisplay","markAsReadAction","ComposeMail","composeDraft","registeredEmail","header","saveDraftAction","inpGroup","htmlFor","readOnly","send","EmailPage","setInbox","setSent","setStarred","setDrafts","setTrash","inboxArr","sentArr","draftsArr","trashArr","starredArr","filter","concat","sort","b","showSidebar","setShowSidebar","isCompose","setIsCompose","setComposeDraft","forEach","main","exact","path","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.635b4ebe.chunk.js","sourcesContent":["export const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\n\r\nexport const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR';\r\n\r\nexport const UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\r\nexport const UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\r\nexport const UPLOAD_IMAGE_ERROR = 'UPLOAD_IMAGE_ERROR';\r\n\r\nexport const FETCH_EMAILS_REQUEST = 'FETCH_EMAILS_REQUEST';\r\nexport const FETCH_EMAILS_SUCCESS = 'FETCH_EMAILS_SUCCESS';\r\nexport const FETCH_EMAILS_ERROR = 'FETCH_EMAILS_ERROR';\r\n\r\nexport const SEND_EMAIL_REQUEST = 'SEND_EMAIL_REQUEST';\r\nexport const SEND_EMAIL_SUCCESS = 'SEND_EMAIL_SUCCESS';\r\nexport const SEND_EMAIL_ERROR = 'SEND_EMAIL_ERROR';\r\n\r\nexport const SAVE_DRAFT_REQUEST = 'SAVE_DRAFT_REQUEST';\r\nexport const SAVE_DRAFT_SUCCESS = 'SAVE_DRAFT_SUCCES';\r\nexport const SAVE_DRAFT_ERROR = 'SAVE_DRAFT_ERROR';\r\n\r\nexport const UPDATE_DRAFT_REQUEST = 'UPDATE_DRAFT_REQUEST';\r\nexport const UPDATE_DRAFT_SUCCESS = 'UPDATE_DRAFT_SUCCESS';\r\nexport const UPDATE_DRAFT_ERROR = 'UPDATE_DRAFT_ERROR';\r\n\r\nexport const EMAIL_TRASH_REQUEST = 'EMAIL_TRASH_REQUEST';\r\nexport const EMAIL_TRASH_SUCCESS = 'EMAIL_TRASH_SUCCESS';\r\nexport const EMAIL_TRASH_ERROR = 'EMAIL_TRASH_ERROR';\r\n\r\nexport const EMAIL_UNTRASH_REQUEST = 'EMAIL_UNTRASH_REQUEST';\r\nexport const EMAIL_UNTRASH_SUCCESS = 'EMAIL_UNTRASH_SUCCESS';\r\nexport const EMAIL_UNTRASH_ERROR = 'EMAIL_UNTRASH_ERROR';\r\n\r\nexport const TOGGLE_EMAIL_PROP_REQUEST = 'TOGGLE_EMAIL_PROP_REQUEST';\r\nexport const TOGGLE_EMAIL_PROP_SUCCESS = 'TOGGLE_EMAIL_PROP_SUCCESS';\r\nexport const TOGGLE_EMAIL_PROP_ERROR = 'TOGGLE_EMAIL_PROP_ERROR';\r\n\r\nexport const DELETE_EMAIL_REQUEST = 'DELETE_EMAIL_REQUEST';\r\nexport const DELETE_EMAIL_SUCCESS = 'DELETE_EMAIL_SUCCESS';\r\nexport const DELETE_EMAIL_ERROR = 'DELETE_EMAIL_ERROR';\r\n","import {\r\n  CLEAR_ERRORS,\r\n  LOGOUT,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_ERROR,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_ERROR,\r\n  UPLOAD_IMAGE_REQUEST,\r\n  UPLOAD_IMAGE_SUCCESS,\r\n  UPLOAD_IMAGE_ERROR,\r\n} from './../constants';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoggedIn: false,\r\n  token: window.localStorage.getItem('token'),\r\n  user: {},\r\n  error: '',\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: '',\r\n      };\r\n\r\n    case LOGOUT:\r\n      window.localStorage.setItem('token', '');\r\n      console.log('🌐 Token removed from Local Storage');\r\n      return initialState;\r\n\r\n    case REGISTER_REQUEST:\r\n    case LOGIN_REQUEST:\r\n    case FETCH_USER_REQUEST:\r\n    case UPLOAD_IMAGE_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        user: { email: action.payload },\r\n        error: '',\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n      window.localStorage.setItem('token', action.payload);\r\n      console.log('🌐 Token saved to Local Storage', action.payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoggedIn: true,\r\n        token: action.payload,\r\n        error: '',\r\n      };\r\n\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoggedIn: true,\r\n        user: action.payload,\r\n        error: '',\r\n      };\r\n\r\n    case UPLOAD_IMAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        user: {\r\n          ...state.user,\r\n          profilePicture: action.payload,\r\n        },\r\n        error: '',\r\n      };\r\n\r\n    case REGISTER_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        user: {},\r\n        error: action.error,\r\n      };\r\n\r\n    case LOGIN_ERROR:\r\n    case FETCH_USER_ERROR:\r\n      window.localStorage.setItem('token', '');\r\n      console.log('🌐 Token removed from Local Storage');\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoggedIn: false,\r\n        token: '',\r\n        user: {},\r\n        error: action.error,\r\n      };\r\n\r\n    case UPLOAD_IMAGE_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CLEAR_ERRORS,\r\n  LOGOUT,\r\n  FETCH_EMAILS_REQUEST,\r\n  FETCH_EMAILS_SUCCESS,\r\n  FETCH_EMAILS_ERROR,\r\n  SEND_EMAIL_REQUEST,\r\n  SEND_EMAIL_SUCCESS,\r\n  SEND_EMAIL_ERROR,\r\n  SAVE_DRAFT_REQUEST,\r\n  SAVE_DRAFT_SUCCESS,\r\n  SAVE_DRAFT_ERROR,\r\n  UPDATE_DRAFT_REQUEST,\r\n  UPDATE_DRAFT_SUCCESS,\r\n  UPDATE_DRAFT_ERROR,\r\n  EMAIL_TRASH_REQUEST,\r\n  EMAIL_TRASH_SUCCESS,\r\n  EMAIL_TRASH_ERROR,\r\n  EMAIL_UNTRASH_REQUEST,\r\n  EMAIL_UNTRASH_SUCCESS,\r\n  EMAIL_UNTRASH_ERROR,\r\n  TOGGLE_EMAIL_PROP_REQUEST,\r\n  TOGGLE_EMAIL_PROP_SUCCESS,\r\n  TOGGLE_EMAIL_PROP_ERROR,\r\n  DELETE_EMAIL_REQUEST,\r\n  DELETE_EMAIL_SUCCESS,\r\n  DELETE_EMAIL_ERROR,\r\n} from './../constants';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  mailbox: {\r\n    inbox: [],\r\n    outbox: [],\r\n    drafts: [],\r\n    trash: [],\r\n  },\r\n  error: '',\r\n};\r\n\r\nexport const emailReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: '',\r\n      };\r\n\r\n    case LOGOUT:\r\n      return initialState;\r\n\r\n    case FETCH_EMAILS_REQUEST:\r\n    case SEND_EMAIL_REQUEST:\r\n    case SAVE_DRAFT_REQUEST:\r\n    case UPDATE_DRAFT_REQUEST:\r\n    case EMAIL_TRASH_REQUEST:\r\n    case EMAIL_UNTRASH_REQUEST:\r\n    case TOGGLE_EMAIL_PROP_REQUEST:\r\n    case DELETE_EMAIL_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case FETCH_EMAILS_SUCCESS:\r\n    case EMAIL_TRASH_SUCCESS:\r\n    case EMAIL_UNTRASH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        mailbox: action.payload,\r\n        error: '',\r\n      };\r\n\r\n    case SEND_EMAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        mailbox: {\r\n          ...state.mailbox,\r\n          outbox: [...state.mailbox.outbox, action.payload.outbox],\r\n          inbox: [...state.mailbox.inbox, action.payload.inbox],\r\n        },\r\n        error: '',\r\n      };\r\n\r\n    case SAVE_DRAFT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        mailbox: { ...state.mailbox, drafts: [...state.mailbox.drafts, action.payload] },\r\n        error: '',\r\n      };\r\n\r\n    case UPDATE_DRAFT_SUCCESS:\r\n      let copyOfDrafts = [...state.mailbox.drafts];\r\n      for (let i = 0; i < copyOfDrafts.length; i++) {\r\n        if (copyOfDrafts[i]._id === action.payload._id) {\r\n          copyOfDrafts[i] = action.payload;\r\n          break;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        mailbox: { ...state.mailbox, drafts: copyOfDrafts },\r\n        error: '',\r\n      };\r\n\r\n    case TOGGLE_EMAIL_PROP_SUCCESS:\r\n      let copyOfInbox = [...state.mailbox.inbox],\r\n        copyOfOutbox = [...state.mailbox.outbox],\r\n        isEmailFound = false;\r\n      // search inbox\r\n      if (!isEmailFound)\r\n        for (let i = 0; i < copyOfInbox.length; i++) {\r\n          if (copyOfInbox[i]._id === action.payload._id) {\r\n            copyOfInbox[i] = action.payload;\r\n            isEmailFound = true;\r\n            break;\r\n          }\r\n        }\r\n      // search outbox\r\n      if (!isEmailFound)\r\n        for (let i = 0; i < copyOfOutbox.length; i++) {\r\n          if (copyOfOutbox[i]._id === action.payload._id) {\r\n            copyOfOutbox[i] = action.payload;\r\n            isEmailFound = true;\r\n            break;\r\n          }\r\n        }\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        mailbox: { ...state.mailbox, inbox: copyOfInbox, outbox: copyOfOutbox },\r\n        error: '',\r\n      };\r\n\r\n    case DELETE_EMAIL_SUCCESS:\r\n      let copyOfTrash = [...state.mailbox.trash],\r\n        copyOfDrafts2 = [...state.mailbox.drafts],\r\n        isEmailFound2 = false;\r\n      for (let i = 0; i < copyOfTrash.length; i++) {\r\n        if (copyOfTrash[i]._id === action.payload) {\r\n          copyOfTrash.splice(i, 1);\r\n          copyOfDrafts2 = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!isEmailFound2) {\r\n        for (let i = 0; i < copyOfDrafts2.length; i++) {\r\n          if (copyOfDrafts2[i]._id === action.payload) {\r\n            copyOfDrafts2.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        mailbox: { ...state.mailbox, trash: copyOfTrash, drafts: copyOfDrafts2 },\r\n        error: '',\r\n      };\r\n\r\n    case FETCH_EMAILS_ERROR:\r\n    case SEND_EMAIL_ERROR:\r\n    case SAVE_DRAFT_ERROR:\r\n    case UPDATE_DRAFT_ERROR:\r\n    case EMAIL_TRASH_ERROR:\r\n    case EMAIL_UNTRASH_ERROR:\r\n    case TOGGLE_EMAIL_PROP_ERROR:\r\n    case DELETE_EMAIL_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { userReducer } from './reducers/userReducer';\r\nimport { emailReducer } from './reducers/emailReducer';\r\n\r\nconst allReducers = combineReducers({\r\n  userReducer,\r\n  emailReducer,\r\n});\r\n\r\nexport const store = createStore(allReducers, composeWithDevTools(applyMiddleware(thunk, logger)));\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://arcane-inlet-86488.herokuapp.com/api/v1';\r\nconst headers = (token) => ({\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Authorization: 'Bearer ' + token,\r\n  },\r\n});\r\n\r\n// account routes\r\nexport const register = (form) => axios.post(`${url}/account/register`, form);\r\nexport const login = (form) => axios.post(`${url}/account/login`, form);\r\nexport const getUser = (token) => axios.get(`${url}/account`, headers(token));\r\nexport const uploadImage = (token, image) =>\r\n  axios.put(`${url}/account/image`, image, headers(token));\r\n\r\n// email routes\r\nexport const getAllEmails = (token) => axios.get(`${url}/email`, headers(token));\r\nexport const sendEmail = (token, form) => axios.post(`${url}/email/send`, form, headers(token));\r\nexport const saveDraft = (token, form) => axios.post(`${url}/email/draft`, form, headers(token));\r\nexport const updateDraft = (token, id, form) =>\r\n  axios.put(`${url}/email/draft/${id}`, form, headers(token));\r\n\r\nexport const moveToTrash = (token, id) =>\r\n  axios.put(`${url}/email/${id}/trash`, null, headers(token));\r\n\r\nexport const removeFromTrash = (token, id) =>\r\n  axios.put(`${url}/email/${id}/untrash`, null, headers(token));\r\n\r\nexport const markAsRead = (token, id) => axios.put(`${url}/email/${id}/read`, null, headers(token));\r\nexport const markAsUnread = (token, id) =>\r\n  axios.put(`${url}/email/${id}/unread`, null, headers(token));\r\n\r\nexport const setFavorite = (token, id) =>\r\n  axios.put(`${url}/email/${id}/favorite`, null, headers(token));\r\n\r\nexport const unsetFavorite = (token, id) =>\r\n  axios.put(`${url}/email/${id}/unfavorite`, null, headers(token));\r\n  \r\nexport const deleteEmail = (token, id) => axios.delete(`${url}/email/${id}`, headers(token));\r\n","import { CLEAR_ERRORS } from './../constants';\r\n\r\nexport const clearErrors = () => {\r\n  return { type: CLEAR_ERRORS };\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { loginAction } from '../../../redux/actions/accountActions';\r\nimport { clearErrors } from '../../../redux/actions/clearErrors';\r\nimport { useForm } from 'react-hook-form';\r\nimport styles from './styles/Form.module.css';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\n\r\nexport default function FormLogin({ isLoading, error, user }) {\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit, errors, formState } = useForm({\r\n    defaultValues: {\r\n      email: user.email, // this is given by Redux state (if the user has successfully registered)\r\n    },\r\n  });\r\n\r\n  if (error) {\r\n    alert(error);\r\n    setTimeout(() => {\r\n      dispatch(clearErrors());\r\n    }, 0);\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(loginAction(values));\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div>\r\n        <CircularProgress color='secondary' />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <form onSubmit={handleSubmit(onSubmit)} className={styles.form}>\r\n        <input\r\n          name='email'\r\n          type='email'\r\n          placeholder='Email'\r\n          ref={register({\r\n            required: true,\r\n            // eslint-disable-next-line no-useless-escape\r\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          })}\r\n        />\r\n        <p>{errors.email?.type === 'required' && 'Email is required'}</p>\r\n        <p>{errors.email?.type === 'pattern' && 'Invalid email'}</p>\r\n\r\n        <input\r\n          name='password'\r\n          type='password'\r\n          placeholder='Password'\r\n          ref={register({\r\n            required: true,\r\n            minLength: 7,\r\n          })}\r\n        />\r\n        <p>{errors.password?.type === 'required' && 'Password is required'}</p>\r\n        <p>{errors.password?.type === 'minLength' && 'Must be at least 7 characters'}</p>\r\n\r\n        <Button type='submit' disabled={formState.isSubmitting}>\r\n          Login\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  LOGOUT,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_ERROR,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_ERROR,\r\n  UPLOAD_IMAGE_REQUEST,\r\n  UPLOAD_IMAGE_SUCCESS,\r\n  UPLOAD_IMAGE_ERROR,\r\n} from './../constants';\r\nimport { register, login, getUser, uploadImage } from './../../api';\r\n\r\nexport const logoutAction = () => {\r\n  return { type: LOGOUT };\r\n};\r\n\r\nexport const registerAction = (form) => async (dispatch) => {\r\n  dispatch({ type: REGISTER_REQUEST });\r\n  try {\r\n    const response = await register(form);\r\n    dispatch({ type: REGISTER_SUCCESS, payload: response.data.email });\r\n  } catch (error) {\r\n    dispatch({ type: REGISTER_ERROR, error: error.response.data.message });\r\n  }\r\n};\r\n\r\nexport const loginAction = (form) => async (dispatch) => {\r\n  dispatch({ type: LOGIN_REQUEST });\r\n  try {\r\n    const response = await login(form);\r\n    dispatch({ type: LOGIN_SUCCESS, payload: response.data.token });\r\n  } catch (error) {\r\n    dispatch({ type: LOGIN_ERROR, error: error.response.data.message });\r\n  }\r\n};\r\n\r\nexport const getUserAction = () => async (dispatch, getState) => {\r\n  dispatch({ type: FETCH_USER_REQUEST });\r\n  try {\r\n    const response = await getUser(getState().userReducer.token);\r\n    dispatch({ type: FETCH_USER_SUCCESS, payload: response.data.user });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_USER_ERROR, error: error.response.data.message });\r\n  }\r\n};\r\n\r\nexport const uploadImageAction = (image) => async (dispatch, getState) => {\r\n  dispatch({ type: UPLOAD_IMAGE_REQUEST });\r\n  try {\r\n    const response = await uploadImage(getState().userReducer.token, image);\r\n    dispatch({ type: UPLOAD_IMAGE_SUCCESS, payload: response.data.profilePicture });\r\n  } catch (error) {\r\n    dispatch({ type: UPLOAD_IMAGE_ERROR, error });\r\n  }\r\n};\r\n","import { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerAction } from '../../../redux/actions/accountActions';\r\nimport { clearErrors } from '../../../redux/actions/clearErrors';\r\nimport { useForm } from 'react-hook-form';\r\nimport styles from './styles/Form.module.css';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\n\r\nexport default function FormRegister({ isLoading, error }) {\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit, errors, watch, formState } = useForm();\r\n  const password = useRef({}); // used so I can compare the password and confirmed password\r\n  password.current = watch('password', '');\r\n\r\n  if (error) {\r\n    alert(error);\r\n    setTimeout(() => {\r\n      dispatch(clearErrors());\r\n    }, 0);\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(registerAction(values));\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div>\r\n        <CircularProgress color='secondary' />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <form onSubmit={handleSubmit(onSubmit)} className={styles.form}>\r\n        <input\r\n          name='firstName'\r\n          type='text'\r\n          placeholder='First name'\r\n          ref={register({\r\n            required: true,\r\n            pattern: /^[a-z ,.'-]+$/i,\r\n          })}\r\n        />\r\n        <p>{errors.email?.type === 'required' && 'First name is required'}</p>\r\n        <p>{errors.firstName?.type === 'pattern' && 'Invalid name'}</p>\r\n\r\n        <input\r\n          name='middleName'\r\n          type='text'\r\n          placeholder='Middle name (optional)'\r\n          ref={register({\r\n            pattern: /^[a-z ,.'-]+$/i,\r\n          })}\r\n        />\r\n        <p>{errors.middleName?.type === 'pattern' && 'Invalid name'}</p>\r\n\r\n        <input\r\n          name='lastName'\r\n          type='text'\r\n          placeholder='Last name'\r\n          ref={register({\r\n            required: true,\r\n            pattern: /^[a-z ,.'-]+$/i,\r\n          })}\r\n        />\r\n        <p>{errors.email?.type === 'required' && 'Last name is required'}</p>\r\n        <p>{errors.lastName?.type === 'pattern' && 'Invalid name'}</p>\r\n\r\n        <input\r\n          name='email'\r\n          type='email'\r\n          placeholder='Email'\r\n          ref={register({\r\n            required: true,\r\n            // eslint-disable-next-line no-useless-escape\r\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          })}\r\n        />\r\n        <p>{errors.email?.type === 'required' && 'Email is required'}</p>\r\n        <p>{errors.email?.type === 'pattern' && 'Invalid email'}</p>\r\n\r\n        <input\r\n          name='password'\r\n          type='password'\r\n          placeholder='Password'\r\n          ref={register({\r\n            required: true,\r\n            minLength: 7,\r\n          })}\r\n        />\r\n        <p>{errors.password?.type === 'required' && 'Password is required'}</p>\r\n        <p>{errors.password?.type === 'minLength' && 'Must be at least 7 characters'}</p>\r\n\r\n        <input\r\n          name='passwordConfirm'\r\n          type='password'\r\n          placeholder='Confirm Password'\r\n          ref={register({\r\n            required: true,\r\n            validate: (value) => value === password.current,\r\n          })}\r\n        />\r\n        <p>{errors.passwordConfirm?.type === 'required' && 'Password confirmation is required'}</p>\r\n        <p>{errors.passwordConfirm?.type === 'validate' && 'Passwords do not match'}</p>\r\n\r\n        <Button type='submit' disabled={formState.isSubmitting}>\r\n          Register\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/gmail.a9ea37fa.svg\";","import { useState, useEffect, Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './styles/AuthPage.module.css';\r\nimport FormLogin from './Form/FormLogin';\r\nimport FormRegister from './Form/FormRegister';\r\nimport GmailIcon from './images/gmail.svg';\r\n\r\nexport default function AuthPage() {\r\n  const { user, isLoading, error } = useSelector((state) => state.userReducer);\r\n\r\n  // defines if the register or login form is displayed\r\n  const [isCreateNew, setIsCreateNew] = useState(false);\r\n  const toggleIsCreateNew = () => setIsCreateNew(!isCreateNew);\r\n\r\n  // if the user has registered, and the email used has been applied,\r\n  // then toggle state to show 'login' component with the registered email.\r\n  useEffect(() => {\r\n    if (user.email) {\r\n      toggleIsCreateNew();\r\n      alert('Account successfully created!');\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [user.email]);\r\n\r\n  return (\r\n    <div className={styles.page}>\r\n      <img src={GmailIcon} alt='Gmail' />\r\n\r\n      {isCreateNew ? (\r\n        <Fragment>\r\n          <FormRegister isLoading={isLoading} error={error} />\r\n          <button className={styles.link} onClick={toggleIsCreateNew}>\r\n            Login an existing account\r\n          </button>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <FormLogin isLoading={isLoading} error={error} user={user} />\r\n          <button className={styles.link} onClick={toggleIsCreateNew}>\r\n            Create a new account\r\n          </button>\r\n        </Fragment>\r\n      )}\r\n\r\n      <p>\r\n        Disclaimer: this clone is not associated with Google! All accounts & emails are fictive, but\r\n        remain in a database.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  FETCH_EMAILS_REQUEST,\r\n  FETCH_EMAILS_SUCCESS,\r\n  FETCH_EMAILS_ERROR,\r\n  SEND_EMAIL_REQUEST,\r\n  SEND_EMAIL_SUCCESS,\r\n  SEND_EMAIL_ERROR,\r\n  SAVE_DRAFT_REQUEST,\r\n  SAVE_DRAFT_SUCCESS,\r\n  SAVE_DRAFT_ERROR,\r\n  UPDATE_DRAFT_REQUEST,\r\n  UPDATE_DRAFT_SUCCESS,\r\n  UPDATE_DRAFT_ERROR,\r\n  EMAIL_TRASH_REQUEST,\r\n  EMAIL_TRASH_SUCCESS,\r\n  EMAIL_TRASH_ERROR,\r\n  EMAIL_UNTRASH_REQUEST,\r\n  EMAIL_UNTRASH_SUCCESS,\r\n  EMAIL_UNTRASH_ERROR,\r\n  TOGGLE_EMAIL_PROP_REQUEST,\r\n  TOGGLE_EMAIL_PROP_SUCCESS,\r\n  TOGGLE_EMAIL_PROP_ERROR,\r\n  DELETE_EMAIL_REQUEST,\r\n  DELETE_EMAIL_SUCCESS,\r\n  DELETE_EMAIL_ERROR,\r\n} from './../constants';\r\nimport {\r\n  getAllEmails,\r\n  sendEmail,\r\n  saveDraft,\r\n  updateDraft,\r\n  moveToTrash,\r\n  removeFromTrash,\r\n  markAsRead,\r\n  markAsUnread,\r\n  setFavorite,\r\n  unsetFavorite,\r\n  deleteEmail,\r\n} from '../../api';\r\n\r\nexport const getEmailsAction = () => async (dispatch, getState) => {\r\n  dispatch({ type: FETCH_EMAILS_REQUEST });\r\n  try {\r\n    const response = await getAllEmails(getState().userReducer.token);\r\n    dispatch({ type: FETCH_EMAILS_SUCCESS, payload: response.data.mailbox });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_EMAILS_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const sendEmailAction = (form) => async (dispatch, getState) => {\r\n  dispatch({ type: SEND_EMAIL_REQUEST });\r\n  try {\r\n    const response = await sendEmail(getState().userReducer.token, form);\r\n    dispatch({\r\n      type: SEND_EMAIL_SUCCESS,\r\n      payload: { outbox: response.data.sent, inbox: response.data.received },\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: SEND_EMAIL_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const saveDraftAction = (form) => async (dispatch, getState) => {\r\n  dispatch({ type: SAVE_DRAFT_REQUEST });\r\n  try {\r\n    const response = await saveDraft(getState().userReducer.token, form);\r\n    dispatch({ type: SAVE_DRAFT_SUCCESS, payload: response.data.draft });\r\n  } catch (error) {\r\n    dispatch({ type: SAVE_DRAFT_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const updateDraftAction = (id, form) => async (dispatch, getState) => {\r\n  dispatch({ type: UPDATE_DRAFT_REQUEST });\r\n  try {\r\n    const response = await updateDraft(getState().userReducer.token, id, form);\r\n    dispatch({ type: UPDATE_DRAFT_SUCCESS, payload: response.data.draft });\r\n  } catch (error) {\r\n    dispatch({ type: UPDATE_DRAFT_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const moveToTrashAction = (id) => async (dispatch, getState) => {\r\n  dispatch({ type: EMAIL_TRASH_REQUEST });\r\n  try {\r\n    const response = await moveToTrash(getState().userReducer.token, id);\r\n    dispatch({ type: EMAIL_TRASH_SUCCESS, payload: response.data.mailbox });\r\n  } catch (error) {\r\n    dispatch({ type: EMAIL_TRASH_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const removeFromTrashAction = (id) => async (dispatch, getState) => {\r\n  dispatch({ type: EMAIL_UNTRASH_REQUEST });\r\n  try {\r\n    const response = await removeFromTrash(getState().userReducer.token, id);\r\n    dispatch({ type: EMAIL_UNTRASH_SUCCESS, payload: response.data.mailbox });\r\n  } catch (error) {\r\n    dispatch({ type: EMAIL_UNTRASH_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const markAsReadAction = (id) => async (dispatch, getState) => {\r\n  dispatch({ type: TOGGLE_EMAIL_PROP_REQUEST });\r\n  try {\r\n    const response = await markAsRead(getState().userReducer.token, id);\r\n    dispatch({ type: TOGGLE_EMAIL_PROP_SUCCESS, payload: response.data.email });\r\n  } catch (error) {\r\n    dispatch({ type: TOGGLE_EMAIL_PROP_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const markAsUnreadAction = (id) => async (dispatch, getState) => {\r\n  dispatch({ type: TOGGLE_EMAIL_PROP_REQUEST });\r\n  try {\r\n    const response = await markAsUnread(getState().userReducer.token, id);\r\n    dispatch({ type: TOGGLE_EMAIL_PROP_SUCCESS, payload: response.data.email });\r\n  } catch (error) {\r\n    dispatch({ type: TOGGLE_EMAIL_PROP_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const setFavoriteAction = (id) => async (dispatch, getState) => {\r\n  dispatch({ type: TOGGLE_EMAIL_PROP_REQUEST });\r\n  try {\r\n    const response = await setFavorite(getState().userReducer.token, id);\r\n    dispatch({ type: TOGGLE_EMAIL_PROP_SUCCESS, payload: response.data.email });\r\n  } catch (error) {\r\n    dispatch({ type: TOGGLE_EMAIL_PROP_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const unsetFavoriteAction = (id) => async (dispatch, getState) => {\r\n  dispatch({ type: TOGGLE_EMAIL_PROP_REQUEST });\r\n  try {\r\n    const response = await unsetFavorite(getState().userReducer.token, id);\r\n    dispatch({ type: TOGGLE_EMAIL_PROP_SUCCESS, payload: response.data.email });\r\n  } catch (error) {\r\n    dispatch({ type: TOGGLE_EMAIL_PROP_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const deleteEmailAction = (id) => async (dispatch, getState) => {\r\n  dispatch({ type: DELETE_EMAIL_REQUEST });\r\n  try {\r\n    const response = await deleteEmail(getState().userReducer.token, id);\r\n    dispatch({ type: DELETE_EMAIL_SUCCESS, payload: response.data.id });\r\n  } catch (error) {\r\n    dispatch({ type: DELETE_EMAIL_ERROR, error });\r\n  }\r\n};\r\n","import { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logoutAction } from '../../../../redux/actions/accountActions';\r\nimport styles from './styles/AccountControls.module.css';\r\nimport { Avatar, Badge, Button } from '@material-ui/core';\r\n\r\nexport default function AccountControls({ user, toggleShowEditImage, toggleShowProfile }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Badge\r\n        badgeContent='edit'\r\n        color='secondary'\r\n        overlap='circle'\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        style={{ cursor: 'pointer' }}\r\n        onClick={() => {\r\n          toggleShowEditImage();\r\n          toggleShowProfile();\r\n        }}>\r\n        <Avatar className={styles.avatar} src={user.profilePicture} />\r\n      </Badge>\r\n\r\n      <p>\r\n        {user.name.first} {user.name.last}\r\n        <br />\r\n        {user.email}\r\n      </p>\r\n\r\n      <Button onClick={() => dispatch(logoutAction())}>Logout</Button>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uploadImageAction } from '../../../../redux/actions/accountActions';\r\nimport styles from './styles/EditImageModal.module.css';\r\nimport FileBase64 from 'react-file-base64';\r\nimport { Avatar, Button } from '@material-ui/core';\r\n\r\nexport default function EditImageModal({ toggleShowEditImage }) {\r\n  const dispatch = useDispatch();\r\n  const [image, setImage] = useState('');\r\n\r\n  const upload = (e) => {\r\n    e.preventDefault();\r\n    dispatch(uploadImageAction({ image }));\r\n    toggleShowEditImage();\r\n  };\r\n\r\n  return (\r\n    <div className={styles.modal}>\r\n      <form className={styles.form} onSubmit={upload}>\r\n        <span onClick={toggleShowEditImage}>&times;</span>\r\n\r\n        <Avatar className={styles.avatar} src={image.base64} />\r\n        <p>Select a profile picture (max 10mb)</p>\r\n        <label>\r\n          <FileBase64 multiple={false} onDone={(file) => setImage(file)} />\r\n          Select image\r\n        </label>\r\n        <Button type='submit' disabled={!image}>\r\n          Upload\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/gmail-logo.73f95a4e.png\";","import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './styles/Header.module.css';\r\nimport AccountControls from './AccountControls/AccountControls';\r\nimport EditImageModal from './EditImageModal/EditImageModal';\r\nimport GmailLogo from './images/gmail-logo.png';\r\nimport { IconButton, Avatar } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport NotificationsRoundedIcon from '@material-ui/icons/NotificationsRounded';\r\n\r\nexport default function Header({ toggleShowSidebar }) {\r\n  const { user } = useSelector((state) => state.userReducer);\r\n\r\n  const [showProfile, setShowProfile] = useState(false);\r\n  const [showEditImage, setShowEditImage] = useState(false);\r\n\r\n  const toggleShowProfile = () => setShowProfile(!showProfile);\r\n  const toggleShowEditImage = () => setShowEditImage(!showEditImage);\r\n\r\n  return (\r\n    <header className={styles.container}>\r\n      <div className={styles.side}>\r\n        <IconButton onClick={toggleShowSidebar}>\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <img src={GmailLogo} alt='gmail logo' />\r\n      </div>\r\n\r\n      <div className={styles.middle}>\r\n        <IconButton>\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <input type='text' placeholder='Search mail' />\r\n      </div>\r\n\r\n      <div className={styles.side + ' ' + styles.relative}>\r\n        <IconButton>\r\n          <AppsIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <NotificationsRoundedIcon />\r\n        </IconButton>\r\n        <IconButton onClick={toggleShowProfile}>\r\n          <Avatar src={user.profilePicture} />\r\n        </IconButton>\r\n\r\n        {showProfile && (\r\n          <AccountControls\r\n            user={user}\r\n            toggleShowProfile={toggleShowProfile}\r\n            toggleShowEditImage={toggleShowEditImage}\r\n          />\r\n        )}\r\n        {showEditImage && <EditImageModal toggleShowEditImage={toggleShowEditImage} />}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import styles from './styles/SidebarOption.module.css';\r\n\r\nexport default function SidebarOption({ Icon, title, number, selected, onClick, className }) {\r\n  return (\r\n    <div className={`${styles.item} ${selected && styles.active} ${className}`} onClick={onClick}>\r\n      <Icon fontSize='large' />\r\n      <h3>{title}</h3>\r\n      <p>{number}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport styles from './styles/Sidebar.module.css';\r\nimport SidebarOption from './SidebarOption/SidebarOption';\r\nimport { Button } from '@material-ui/core';\r\nimport AddRoundedIcon from '@material-ui/icons/Add';\r\nimport InboxRoundedIcon from '@material-ui/icons/Inbox';\r\nimport StarRoundedIcon from '@material-ui/icons/Star';\r\nimport SendRoundedIcon from '@material-ui/icons/Send';\r\nimport NoteRoundedIcon from '@material-ui/icons/Note';\r\nimport DeleteRoundedIcon from '@material-ui/icons/Delete';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\n\r\nexport default function Sidebar({\r\n  toggleIsCompose,\r\n  inboxLength,\r\n  sentLength,\r\n  starredLength,\r\n  draftsLength,\r\n  trashLength,\r\n}) {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [showMore, setShowMore] = useState(false);\r\n  const toggleShowMore = () => setShowMore(!showMore);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Button\r\n        className={styles.compose}\r\n        onClick={() => toggleIsCompose()}\r\n        startIcon={<AddRoundedIcon fontSize='large' />}>\r\n        Compose\r\n      </Button>\r\n\r\n      <SidebarOption\r\n        Icon={InboxRoundedIcon}\r\n        title='Inbox'\r\n        number={inboxLength}\r\n        onClick={() => history.push('/email/inbox')}\r\n        selected={location.pathname === '/email/inbox'}\r\n      />\r\n      <SidebarOption\r\n        Icon={StarRoundedIcon}\r\n        title='Starred'\r\n        number={starredLength}\r\n        onClick={() => history.push('/email/starred')}\r\n        selected={location.pathname === '/email/starred'}\r\n      />\r\n      <SidebarOption\r\n        Icon={NoteRoundedIcon}\r\n        title='Drafts'\r\n        number={draftsLength}\r\n        onClick={() => history.push('/email/drafts')}\r\n        selected={location.pathname === '/email/drafts'}\r\n      />\r\n      <SidebarOption\r\n        Icon={SendRoundedIcon}\r\n        title='Sent'\r\n        number={sentLength}\r\n        onClick={() => history.push('/email/sent')}\r\n        selected={location.pathname === '/email/sent'}\r\n      />\r\n      <SidebarOption\r\n        Icon={ExpandMoreRoundedIcon}\r\n        title='More'\r\n        number={''}\r\n        onClick={toggleShowMore}\r\n        className={showMore ? styles.showMore__on : styles.showMore__off}\r\n      />\r\n      {showMore && (\r\n        <>\r\n          <SidebarOption\r\n            Icon={DeleteRoundedIcon}\r\n            title='Trash'\r\n            number={trashLength}\r\n            onClick={() => history.push('/email/trash')}\r\n            selected={location.pathname === '/email/trash'}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  getEmailsAction,\r\n  moveToTrashAction,\r\n  removeFromTrashAction,\r\n  markAsUnreadAction,\r\n  setFavoriteAction,\r\n  unsetFavoriteAction,\r\n  deleteEmailAction,\r\n} from '../../../redux/actions/emailActions';\r\nimport styles from './styles/EmailOptions.module.css';\r\nimport { Checkbox, IconButton, Tooltip } from '@material-ui/core';\r\n// import ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\r\n// import ChevronRightRoundedIcon from '@material-ui/icons/ChevronRightRounded';\r\nimport KeyboardRoundedIcon from '@material-ui/icons/KeyboardRounded';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport RefreshRoundedIcon from '@material-ui/icons/RefreshRounded';\r\nimport DraftsRoundedIcon from '@material-ui/icons/DraftsRounded';\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport StarOutlineRoundedIcon from '@material-ui/icons/StarOutlineRounded';\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\nimport RestoreFromTrashRoundedIcon from '@material-ui/icons/RestoreFromTrashRounded';\r\nimport DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\r\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\r\n\r\nexport default function EmailOptions(props) {\r\n  return (\r\n    <div className={styles.component}>\r\n      <div className={styles.wrapper}>\r\n        {/* This is where the developer needs to insert the export functions below */}\r\n        {props.children}\r\n      </div>\r\n\r\n      <div className={styles.wrapper}>\r\n        {/* \r\n        <IconButton>\r\n          <ChevronLeftRoundedIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <ChevronRightRoundedIcon />\r\n        </IconButton>\r\n         */}\r\n        <Tooltip title='null'>\r\n          <IconButton>\r\n            <KeyboardRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function SelectOne() {\r\n  // TODO\r\n  return (\r\n    <Tooltip\r\n      // title='Select / Unselect'\r\n      title='null'>\r\n      <Checkbox />\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport function SelectAll() {\r\n  // TODO\r\n  return (\r\n    <Tooltip\r\n      // title='Select all / Unselect all'\r\n      title='null'>\r\n      <Checkbox />\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport function GoBack() {\r\n  const history = useHistory();\r\n  return (\r\n    <Tooltip title='Back'>\r\n      <IconButton onClick={() => history.goBack()}>\r\n        <ArrowBackRoundedIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport function Refetch() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Tooltip title='Refresh'>\r\n      <IconButton onClick={() => dispatch(getEmailsAction())}>\r\n        <RefreshRoundedIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport function MarkUnread({ id }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  return (\r\n    <Tooltip title='Mark as unread'>\r\n      <IconButton\r\n        onClick={() => {\r\n          dispatch(markAsUnreadAction(id));\r\n          history.goBack();\r\n        }}>\r\n        <DraftsRoundedIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport function MarkStar({ id, isStarred }) {\r\n  const dispatch = useDispatch();\r\n  if (isStarred) {\r\n    return (\r\n      <Tooltip title='Unfavorite'>\r\n        <IconButton onClick={() => dispatch(unsetFavoriteAction(id))}>\r\n          <StarRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  } else {\r\n    return (\r\n      <Tooltip title='Favorite'>\r\n        <IconButton onClick={() => dispatch(setFavoriteAction(id))}>\r\n          <StarOutlineRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n\r\nexport function PlaceTrash({ id, isInTrash }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  if (isInTrash) {\r\n    return (\r\n      <Tooltip title='Not trash'>\r\n        <IconButton\r\n          onClick={() => {\r\n            dispatch(removeFromTrashAction(id));\r\n            history.goBack();\r\n          }}>\r\n          <RestoreFromTrashRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  } else {\r\n    return (\r\n      <Tooltip title='Move to trash'>\r\n        <IconButton\r\n          onClick={() => {\r\n            dispatch(moveToTrashAction(id));\r\n            history.goBack();\r\n          }}>\r\n          <DeleteRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n\r\nexport function Delete({ id }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Tooltip title='Delete'>\r\n      <IconButton onClick={() => dispatch(deleteEmailAction(id))}>\r\n        <DeleteForeverRoundedIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport function More() {\r\n  // TODO\r\n  return (\r\n    <Tooltip\r\n      // title='More'\r\n      title='null'>\r\n      <IconButton>\r\n        <MoreVertRoundedIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import { useHistory, useParams } from 'react-router-dom';\r\nimport styles from './styles/EmailListItem.module.css';\r\nimport { Delete, MarkStar, SelectOne } from '../../EmailOptions/EmailOptions';\r\n\r\nexport default function EmailCategoryItem({\r\n  id,\r\n  title,\r\n  subject,\r\n  message,\r\n  date,\r\n  isRead,\r\n  isStarred,\r\n  isTrash,\r\n  isDraft,\r\n  toggleIsCompose,\r\n}) {\r\n  const history = useHistory();\r\n  const { category } = useParams();\r\n\r\n  // this function converts the date object to a sweet UI date string\r\n  const dateToString = (dateObj) => {\r\n    let day = new Date(dateObj).getDate();\r\n    let month = new Date(dateObj).getMonth();\r\n    switch (month) {\r\n      case 0:\r\n        return `Jan ${day}`;\r\n      case 1:\r\n        return `Feb ${day}`;\r\n      case 2:\r\n        return `Mar ${day}`;\r\n      case 3:\r\n        return `Apr ${day}`;\r\n      case 4:\r\n        return `May ${day}`;\r\n      case 5:\r\n        return `Jun ${day}`;\r\n      case 6:\r\n        return `Jul ${day}`;\r\n      case 7:\r\n        return `Aug ${day}`;\r\n      case 8:\r\n        return `Sep ${day}`;\r\n      case 9:\r\n        return `Oct ${day}`;\r\n      case 10:\r\n        return `Nov ${day}`;\r\n      case 11:\r\n        return `Dec ${day}`;\r\n      default:\r\n        return 'Loading...';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.item} ${isRead || isTrash || isDraft ? styles.read : styles.unread}`}>\r\n      <SelectOne />\r\n      {isStarred !== undefined && <MarkStar id={id} isStarred={isStarred} />}\r\n      {isTrash || isDraft ? <Delete id={id} /> : ''}\r\n\r\n      <div\r\n        className={styles.message}\r\n        onClick={() =>\r\n          isDraft ? toggleIsCompose(id) : history.push(`/email/${category}/view/${id}`)\r\n        }>\r\n        <h4>{title}</h4>\r\n        &nbsp;&nbsp;\r\n        <p>\r\n          <span>{subject}</span>\r\n          &nbsp;&nbsp;\r\n          {message}\r\n        </p>\r\n        &nbsp;&nbsp;\r\n        <span>{dateToString(date)}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Fragment } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './styles/EmailCategory.module.css';\r\nimport EmailOptions, { More, Refetch, SelectAll } from '../EmailOptions/EmailOptions';\r\nimport EmailListItem from './EmailListItem/EmailListItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport default function EmailCategory({ inbox, sent, drafts, starred, trash, toggleIsCompose }) {\r\n  const { category } = useParams();\r\n  const { isLoading } = useSelector((state) => state.emailReducer);\r\n  const userEmail = useSelector((state) => state.userReducer.user.email);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={styles.center}>\r\n        <CircularProgress color='secondary' />\r\n      </div>\r\n    );\r\n  } else {\r\n    switch (category) {\r\n      case 'inbox':\r\n        return inbox.length ? (\r\n          <Fragment>\r\n            <EmailOptions>\r\n              <SelectAll />\r\n              <Refetch />\r\n              <More />\r\n            </EmailOptions>\r\n\r\n            {inbox.map((item) => (\r\n              <EmailListItem\r\n                key={item._id}\r\n                id={item._id}\r\n                title={item.from}\r\n                subject={item.subject}\r\n                message={item.message}\r\n                date={item.createdAt}\r\n                isRead={item.read}\r\n                isStarred={item.favorite}\r\n              />\r\n            ))}\r\n          </Fragment>\r\n        ) : (\r\n          <div className={styles.center}>Inbox is empty...</div>\r\n        );\r\n\r\n      case 'sent':\r\n        return sent.length ? (\r\n          <Fragment>\r\n            <EmailOptions>\r\n              <SelectAll />\r\n              <Refetch />\r\n              <More />\r\n            </EmailOptions>\r\n\r\n            {sent.map((item) => (\r\n              <EmailListItem\r\n                key={item._id}\r\n                id={item._id}\r\n                title={`To: ${item.to}`}\r\n                subject={item.subject}\r\n                message={item.message}\r\n                date={item.createdAt}\r\n                isRead={item.read}\r\n                isStarred={item.favorite}\r\n              />\r\n            ))}\r\n          </Fragment>\r\n        ) : (\r\n          <div className={styles.center}>Outbox is empty...</div>\r\n        );\r\n\r\n      case 'starred':\r\n        return starred.length ? (\r\n          <Fragment>\r\n            <EmailOptions>\r\n              <SelectAll />\r\n              <Refetch />\r\n              <More />\r\n            </EmailOptions>\r\n\r\n            {starred.map((item) => (\r\n              <EmailListItem\r\n                key={item._id}\r\n                id={item._id}\r\n                title={item.from === userEmail ? 'me' : item.from}\r\n                subject={item.subject}\r\n                message={item.message}\r\n                date={item.createdAt}\r\n                isRead={item.read}\r\n                isStarred={true}\r\n              />\r\n            ))}\r\n          </Fragment>\r\n        ) : (\r\n          <div className={styles.center}>Favorites is empty...</div>\r\n        );\r\n\r\n      case 'drafts':\r\n        return drafts.length ? (\r\n          <Fragment>\r\n            <EmailOptions>\r\n              <SelectAll />\r\n              <Refetch />\r\n              <More />\r\n            </EmailOptions>\r\n\r\n            {drafts.map((item) => (\r\n              <EmailListItem\r\n                key={item._id}\r\n                id={item._id}\r\n                title='Draft'\r\n                subject={item.subject}\r\n                message={item.message}\r\n                date={item.updatedAt}\r\n                isDraft={true}\r\n                toggleIsCompose={toggleIsCompose}\r\n              />\r\n            ))}\r\n          </Fragment>\r\n        ) : (\r\n          <div className={styles.center}>Drafts is empty...</div>\r\n        );\r\n\r\n      case 'trash':\r\n        return trash.length ? (\r\n          <Fragment>\r\n            <EmailOptions>\r\n              <SelectAll />\r\n              <Refetch />\r\n              <More />\r\n            </EmailOptions>\r\n\r\n            {trash.map((item) => (\r\n              <EmailListItem\r\n                key={item._id}\r\n                id={item._id}\r\n                title={item.from === userEmail ? 'me' : item.from}\r\n                subject={item.subject}\r\n                message={item.message}\r\n                date={item.createdAt}\r\n                isTrash={true}\r\n              />\r\n            ))}\r\n          </Fragment>\r\n        ) : (\r\n          <div className={styles.center}>Trash is empty...</div>\r\n        );\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { useState, useEffect, Fragment } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { markAsReadAction } from '../../../redux/actions/emailActions';\r\nimport styles from './styles/EmailView.module.css';\r\nimport EmailOptions, { Delete, GoBack, MarkUnread, PlaceTrash } from '../EmailOptions/EmailOptions';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nexport default function EmailView({ inbox, sent, drafts, starred, trash }) {\r\n  const dispatch = useDispatch();\r\n  const { category, id } = useParams();\r\n\r\n  const [emailToDisplay] = useState(() => {\r\n    switch (category) {\r\n      case 'inbox':\r\n        return inbox.find((item) => item._id === id);\r\n      case 'sent':\r\n        return sent.find((item) => item._id === id);\r\n      case 'drafts':\r\n        return drafts.find((item) => item._id === id);\r\n      case 'starred':\r\n        return starred.find((item) => item._id === id);\r\n      case 'trash':\r\n        return trash.find((item) => item._id === id);\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  // this side effect marks the email as read (if it wasn't already marked as read)\r\n  useEffect(() => {\r\n    if (!emailToDisplay.read) dispatch(markAsReadAction(id));\r\n  }, [dispatch, emailToDisplay, id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <EmailOptions>\r\n        <GoBack />\r\n        <PlaceTrash id={id} isInTrash={category === 'trash'} />\r\n        {category === 'trash' ? <Delete /> : <MarkUnread id={id} />}\r\n      </EmailOptions>\r\n\r\n      <div className={styles.wrapper}>\r\n        <div className={styles.container}>\r\n          <h3>{emailToDisplay.subject}</h3>\r\n          <div>\r\n            <Avatar className={styles.avatar} />\r\n            {emailToDisplay.from}\r\n            <br />\r\n            to me\r\n          </div>\r\n          <p>{emailToDisplay.message}</p>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  sendEmailAction,\r\n  saveDraftAction,\r\n  updateDraftAction,\r\n} from '../../../redux/actions/emailActions';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Button } from '@material-ui/core';\r\nimport styles from './styles/ComposeMail.module.css';\r\n\r\nfunction ComposeMail({ toggleIsCompose, composeDraft }) {\r\n  const dispatch = useDispatch();\r\n  const registeredEmail = useSelector((state) => state.userReducer.user.email);\r\n  const { register, handleSubmit, errors, watch } = useForm({\r\n    defaultValues: {\r\n      from: registeredEmail,\r\n      to: composeDraft?.to || '',\r\n      subject: composeDraft?.subject || '',\r\n      message: composeDraft?.message || '',\r\n    },\r\n  });\r\n\r\n  // The following references purposes are to \"pull\" the form data from the useForm hook,\r\n  // and used whenever the message will be saved as a draft\r\n  const from = useRef({});\r\n  const to = useRef({});\r\n  const subject = useRef({});\r\n  const message = useRef({});\r\n  from.current = watch('from', '');\r\n  to.current = watch('to', '');\r\n  subject.current = watch('subject', '');\r\n  message.current = watch('message', '');\r\n\r\n  // the following function sends the message\r\n  // (the server also creates a random reply to be received by the user)\r\n  const onSubmit = (values) => {\r\n    if (!composeDraft) {\r\n      dispatch(sendEmailAction(values));\r\n    } else {\r\n      // but if the component was called by clicking on a draft,\r\n      // then the email is sent, and the draft is updated too!\r\n      dispatch(sendEmailAction(values));\r\n      let form = {\r\n        to: to.current,\r\n        subject: subject.current,\r\n        message: message.current,\r\n      };\r\n      dispatch(updateDraftAction(composeDraft._id, form));\r\n    }\r\n    toggleIsCompose();\r\n  };\r\n\r\n  const onClose = () => {\r\n    if (!composeDraft) {\r\n      // the following is used to save a message as draft\r\n      // (only if one of the fields are not empty)\r\n      if (to.current !== '' || subject.current !== '' || message.current !== '') {\r\n        let form = {\r\n          from: from.current,\r\n          to: to.current,\r\n          subject: subject.current,\r\n          message: message.current,\r\n        };\r\n        dispatch(saveDraftAction(form));\r\n      }\r\n    } else {\r\n      // the following is used to update the existing draft\r\n      let form = {\r\n        to: to.current,\r\n        subject: subject.current,\r\n        message: message.current,\r\n      };\r\n      dispatch(updateDraftAction(composeDraft._id, form));\r\n    }\r\n    toggleIsCompose();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className={styles.compose}>\r\n      <div className={styles.header}>\r\n        <h5>New Message</h5>\r\n        <span onClick={onClose}>&times;</span>\r\n      </div>\r\n\r\n      <div className={styles.inpGroup}>\r\n        <label htmlFor='from'>From:</label>\r\n        <input\r\n          name='from'\r\n          id='from'\r\n          type='email'\r\n          ref={register({\r\n            required: true,\r\n            // eslint-disable-next-line no-useless-escape\r\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          })}\r\n          readOnly\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.inpGroup}>\r\n        <label htmlFor='to'>To:</label>\r\n        <input\r\n          name='to'\r\n          id='to'\r\n          type='email'\r\n          ref={register({\r\n            required: true,\r\n            // eslint-disable-next-line no-useless-escape\r\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          })}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.inpGroup}>\r\n        <label htmlFor='subject'>Subject:</label>\r\n        <input\r\n          name='subject'\r\n          id='subject'\r\n          type='text'\r\n          ref={register({\r\n            required: true,\r\n          })}\r\n        />\r\n      </div>\r\n\r\n      <textarea\r\n        name='message'\r\n        ref={register({\r\n          required: true,\r\n        })}\r\n      />\r\n\r\n      <div className={styles.send}>\r\n        <Button type='submit'>Send</Button>\r\n\r\n        <span>\r\n          <p>{errors.to?.type === 'required' && 'Recipient is required'}</p>\r\n          <p>{errors.from?.type === 'pattern' && 'Invalid email'}</p>\r\n          <p>{errors.subject?.type === 'required' && 'Subject is required'}</p>\r\n          <p>{errors.message?.type === 'required' && 'Email message is required'}</p>\r\n        </span>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ComposeMail;\r\n","import { Fragment, useState, useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getEmailsAction } from '../../redux/actions/emailActions';\r\nimport styles from './styles/EmailPage.module.css';\r\nimport Header from './Header/Header';\r\nimport Sidebar from './Sidebar/Sidebar';\r\nimport EmailCategory from './EmailCategory/EmailCategory';\r\nimport EmailView from './EmailView/EmailView';\r\nimport ComposeMail from './ComposeMail/ComposeMail';\r\n\r\nexport default function EmailPage() {\r\n  const dispatch = useDispatch();\r\n  const mailbox = useSelector((state) => state.emailReducer.mailbox);\r\n  const [inbox, setInbox] = useState([]);\r\n  const [sent, setSent] = useState([]);\r\n  const [starred, setStarred] = useState([]);\r\n  const [drafts, setDrafts] = useState([]);\r\n  const [trash, setTrash] = useState([]);\r\n\r\n  // this gets all emails linked to the user, upon mount\r\n  useEffect(() => {\r\n    dispatch(getEmailsAction());\r\n  }, [dispatch]);\r\n\r\n  // this sorts all the emails by categories and time,\r\n  // and sets all states accordingly.\r\n  // this runs each time the mailbox (redux) was updated\r\n  useEffect(() => {\r\n    // filter mailbox to UI categories\r\n    let inboxArr = [...mailbox.inbox],\r\n      sentArr = [...mailbox.outbox],\r\n      draftsArr = [...mailbox.drafts],\r\n      trashArr = [...mailbox.trash],\r\n      starredArr = mailbox.inbox\r\n        .filter((email) => email.favorite)\r\n        .concat(mailbox.outbox.filter((email) => email.favorite));\r\n\r\n    // sort all categories by date\r\n    inboxArr.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n    sentArr.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n    draftsArr.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n    trashArr.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n    starredArr.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n\r\n    // update states with changes\r\n    setInbox(inboxArr);\r\n    setSent(sentArr);\r\n    setDrafts(draftsArr);\r\n    setTrash(trashArr);\r\n    setStarred(starredArr);\r\n  }, [mailbox]);\r\n\r\n  // these states mount/unmount certain components\r\n  const [showSidebar, setShowSidebar] = useState(true);\r\n  const [isCompose, setIsCompose] = useState(false);\r\n  // this state holds the draft email information (if a draft was clicked for editing)\r\n  const [composeDraft, setComposeDraft] = useState(undefined);\r\n\r\n  const toggleShowSidebar = () => setShowSidebar(!showSidebar);\r\n  const toggleIsCompose = (id) => {\r\n    setIsCompose(!isCompose);\r\n\r\n    // if activated by clicking a draft, set draft details in state\r\n    if (id) {\r\n      drafts.forEach((draft) => draft._id === id && setComposeDraft(draft));\r\n    } else {\r\n      setComposeDraft(undefined);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header toggleShowSidebar={toggleShowSidebar} />\r\n\r\n      <main className={styles.main}>\r\n        {showSidebar && (\r\n          <Sidebar\r\n            toggleIsCompose={toggleIsCompose}\r\n            inboxLength={inbox.length}\r\n            sentLength={sent.length}\r\n            starredLength={starred.length}\r\n            draftsLength={drafts.length}\r\n            trashLength={trash.length}\r\n          />\r\n        )}\r\n\r\n        <div className={styles.container} className='scroll'>\r\n          <Route exact path='/email/:category'>\r\n            <EmailCategory\r\n              inbox={inbox}\r\n              sent={sent}\r\n              starred={starred}\r\n              drafts={drafts}\r\n              trash={trash}\r\n              toggleIsCompose={toggleIsCompose}\r\n            />\r\n          </Route>\r\n\r\n          <Route path='/email/:category/view/:id'>\r\n            <EmailView inbox={inbox} sent={sent} drafts={drafts} starred={starred} trash={trash} />\r\n          </Route>\r\n        </div>\r\n\r\n        {isCompose && <ComposeMail toggleIsCompose={toggleIsCompose} composeDraft={composeDraft} />}\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserAction } from './redux/actions/accountActions';\r\nimport './styles/App.css';\r\nimport AuthPage from './components/AuthPage/AuthPage';\r\nimport EmailPage from './components/EmailPage/EmailPage';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const { isLoggedIn, token } = useSelector((state) => state.userReducer);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      dispatch(getUserAction());\r\n    }\r\n  }, [token, dispatch]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            {!isLoggedIn ? <Redirect to='/account' /> : <Redirect to='/email/inbox' />}\r\n          </Route>\r\n\r\n          <Route exact path='/account'>\r\n            {!isLoggedIn ? <AuthPage /> : <Redirect to='/email/inbox' />}\r\n          </Route>\r\n\r\n          <Route path='/email'>\r\n            {/* This route has multiple sub-routes */}\r\n            {isLoggedIn ? <EmailPage /> : <Redirect to='/account' />}\r\n          </Route>\r\n\r\n          {/* <Route\r\n            exact\r\n            path='/GitHub'\r\n            component={() => (window.location.href = 'https://github.com/belferink1996')}\r\n          /> */}\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\nimport './styles/reset.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"EmailCategory_center__3m9XX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"compose\":\"ComposeMail_compose__36Vga\",\"header\":\"ComposeMail_header__s0IeH\",\"inpGroup\":\"ComposeMail_inpGroup__2_xXt\",\"send\":\"ComposeMail_send__Y_8ae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__18aG4\",\"side\":\"Header_side__NcIyn\",\"middle\":\"Header_middle__3P4ME\",\"relative\":\"Header_relative__3OOVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sidebar_container__3Xqz7\",\"compose\":\"Sidebar_compose__2N8Zj\",\"showMore__on\":\"Sidebar_showMore__on__Bss7Z\",\"showMore__off\":\"Sidebar_showMore__off__1qT5D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"EmailListItem_item__3vyOp\",\"message\":\"EmailListItem_message__3hnSN\",\"unread\":\"EmailListItem_unread__1cxSM\",\"read\":\"EmailListItem_read__QIF_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__BVN7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"AuthPage_page__3188k\",\"link\":\"AuthPage_link__2OlAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"EditImageModal_modal__g6-5s\",\"form\":\"EditImageModal_form__1MOYb\",\"avatar\":\"EditImageModal_avatar__3wlfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"EmailOptions_component__2xz51\",\"wrapper\":\"EmailOptions_wrapper__UfDJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EmailView_wrapper__BfrmT\",\"container\":\"EmailView_container__DrpID\",\"avatar\":\"EmailView_avatar__2BBKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"EmailPage_main__UfY4K\",\"container\":\"EmailPage_container__1X0A_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AccountControls_container__O8v3r\",\"avatar\":\"AccountControls_avatar__2lxDf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SidebarOption_item__xhrt3\",\"active\":\"SidebarOption_active__12web\"};"],"sourceRoot":""}